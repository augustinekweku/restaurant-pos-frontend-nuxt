import { ApiResponse } from "types";
import { AxiosClient } from "../factory";

// Generated by https://quicktype.io

export interface GetCategoriesResponse {
  id: number;
  category_name: string;
  image: string;
  created_at: string;
  updated_at: string;
  desc: string;
}

// Generated by https://quicktype.io

export interface Category {
  id: number;
  category_name: string;
  image: string;
  created_at: string;
  updated_at: string;
  desc: string;
}

// Generated by https://quicktype.io

export interface CreateCategory {
  category_name: string;
  desc: string;
  image: string;
}
export interface UpdateCategory {
  id: string | number;
  category_name: string;
  desc: string;
  image: string;
}

// Generated by https://quicktype.io

export interface CreateCategoryResponse {
  category_name: string;
  image: string;
  desc: string;
  updated_at: string;
  created_at: string;
  id: number;
}

export interface GetTablesResponse {
  id: number;
  table_name: string;
  order_id: null;
  status: string;
  created_at: string;
  updated_at: string;
}

// Generated by https://quicktype.io

export interface CreateTableResponse {
  table_name: string;
  status: number;
  updated_at: string;
  created_at: string;
  id: number;
}

// Generated by https://quicktype.io

export interface GetProductsResponse {
  current_page: number;
  data: Datum[];
  first_page_url: string;
  from: number;
  last_page: number;
  last_page_url: string;
  links: Link[];
  next_page_url: null;
  path: string;
  per_page: number;
  prev_page_url: null;
  to: number;
  total: number;
}

export interface Datum {
  id: number;
  item_name: string;
  item_description: string;
  category_id: number;
  price: string;
  image: string;
  created_at: string;
  updated_at: string;
  qty_left: number;
  stock: number;
}

export interface Link {
  url: null | string;
  label: string;
  active: boolean;
}

// Generated by https://quicktype.io

export interface GetItemsForPOSResponse {
  id: number;
  item_name: string;
  item_description: string;
  category_id: number;
  price: string;
  image: string;
  created_at: string;
  updated_at: string;
  qty_left: number;
  stock: number;
}

// Generated by https://quicktype.io

export interface CreateProductPayload {
  item_name: string;
  item_description: string;
  price: number;
  category_id: number;
  image: string;
  stock: number;
  qty_left: string;
}

// Generated by https://quicktype.io

export interface CreateProductResponse {
  item_name: string;
  item_description: string;
  price: number;
  category_id: number;
  image: string;
  stock: number;
  qty_left: number;
  updated_at: string;
  created_at: string;
  id: number;
}

class ProductModule extends AxiosClient {
  BASE_URL = "http://127.0.0.1:8000/api";

  async getCategories() {
    const res = await this.get<ApiResponse<GetCategoriesResponse[]>>(
      `${this.BASE_URL}/categories`
    );
    return res.data;
  }
  async saveCategory(payload: CreateCategory) {
    const res = await this.post<ApiResponse<CreateCategoryResponse>>(
      `${this.BASE_URL}/create-category`,
      payload
    );
    return res.data;
  }

  async updateCategory(payload: UpdateCategory) {
    const res = await this.post<ApiResponse<CreateCategoryResponse>>(
      `${this.BASE_URL}/edit-category`,
      payload
    );
    return res.data;
  }
  async deleteCategory(id: number) {
    const res = await this.delete<ApiResponse<{}>>(
      `${this.BASE_URL}/delete-category/${id}`
    );
    return res.data;
  }
  async getCategoryById(id: number) {
    const res = await this.get<
      ApiResponse<
        {
          category_name: string;
        }[]
      >
    >(`${this.BASE_URL}/get-category/${id}`);
    return res.data;
  }
  async getTables() {
    const res = await this.get<ApiResponse<GetTablesResponse[]>>(
      `${this.BASE_URL}/get-tables`
    );
    return res.data;
  }

  async saveTable(payload: { table_name: string }) {
    const res = await this.post<ApiResponse<CreateTableResponse>>(
      `${this.BASE_URL}/create-table`,
      payload
    );
    return res.data;
  }
  async getEmptyTables() {
    const res = await this.get<ApiResponse<GetTablesResponse[]>>(
      `${this.BASE_URL}/get-empty-tables`
    );
    return res.data;
  }

  async getProducts() {
    const res = await this.get<ApiResponse<GetProductsResponse>>(
      `${this.BASE_URL}/products`
    );
    return res.data;
  }

  async getItemsForPOS() {
    const res = await this.get<ApiResponse<GetItemsForPOSResponse[]>>(
      `${this.BASE_URL}/get-items-for-pos`
    );
    return res.data;
  }

  async saveProduct(payload: CreateProductPayload) {
    const res = await this.post<ApiResponse<CreateProductResponse>>(
      `${this.BASE_URL}/create-product`,
      payload
    );
    return res.data;
  }

  async updateProduct(payload: CreateProductPayload) {
    const res = await this.post<ApiResponse<CreateProductResponse>>(
      `${this.BASE_URL}/edit-product`,
      payload
    );
    return res.data;
  }
  async deleteProduct(id: number) {
    const res = await this.delete<ApiResponse<{}>>(
      `${this.BASE_URL}/delete-product/${id}`
    );
    return res.data;
  }
}

export default ProductModule;
