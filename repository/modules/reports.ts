import { ApiResponse } from "types";
import { AxiosClient } from "../factory";

// Generated by https://quicktype.io

export interface GetClearedOrderItemsResponse {
  total_amount: string;
  data: Datum[];
  total_quantity: string;
}

export interface Datum {
  id: number;
  item_id: number;
  order_id: number;
  price: string;
  created_at: null;
  updated_at: null;
  item_name: string;
  quantity: number;
  amount: string;
  item: Item;
  order: Order;
}

export interface Item {
  id: number;
  item_name: string;
  item_description: string;
  category_id: number;
  price: string;
  image: string;
  created_at: string;
  updated_at: string;
  qty_left: number;
  stock: number;
}

export interface Order {
  id: number;
  table_id: null;
  order_total: string;
  paid: string;
  balance: string;
  created_at: string;
  updated_at: string;
  invoice_number: string;
  order_number: number;
  status: string;
  table_name: null;
  ready: number;
  order_type: string;
  user_id: number;
  take_away_cleared: number;
}

// Generated by https://quicktype.io

export interface GetClearedOrdersResponse {
  total: string;
  order: Order[];
}

export interface Order {
  id: number;
  table_id: null;
  order_total: string;
  paid: string;
  balance: string;
  created_at: string;
  updated_at: string;
  invoice_number: string;
  order_number: number;
  status: string;
  table_name: null;
  ready: number;
  order_type: string;
  user_id: number;
  take_away_cleared: number;
  user: User;
  order_details: OrderDetail[];
}

export interface OrderDetail {
  id: number;
  item_id: number;
  order_id: number;
  price: string;
  created_at: null;
  updated_at: null;
  item_name: string;
  quantity: number;
  amount: string;
}

export interface User {
  id: number;
  firstName: string;
  lastName: string;
  email: string;
  phone: string;
  userType: string;
  role_id: number;
  email_verified_at: null;
  created_at: null;
  updated_at: null;
}

// Generated by https://quicktype.io

export interface GetItemsForReportResponse {
  total_amount: string;
  data: Datum[];
  total_quantity: string;
}

export interface Datum {
  id: number;
  item_id: number;
  order_id: number;
  price: string;
  created_at: null;
  updated_at: null;
  item_name: string;
  quantity: number;
  amount: string;
  item: Item;
  order: Order;
}

export interface Item {
  id: number;
  item_name: string;
  item_description: string;
  category_id: number;
  price: string;
  image: string;
  created_at: string;
  updated_at: string;
  qty_left: number;
  stock: number;
}

export interface Order {
  id: number;
  table_id: null;
  order_total: string;
  paid: string;
  balance: string;
  created_at: string;
  updated_at: string;
  invoice_number: string;
  order_number: number;
  status: string;
  table_name: null;
  ready: number;
  order_type: string;
  user_id: number;
  take_away_cleared: number;
}

// Generated by https://quicktype.io

export interface GetItemsForCreditorReportResponse {
  total_amount: string;
  data: Datum[];
  total_quantity: string;
}

export interface Datum {
  id: number;
  item_id: number;
  creditor_order_id: number;
  item_name: string;
  quantity: number;
  price: string;
  amount: string;
  created_at: null;
  updated_at: null;
  item: Item;
  creditor_order: CreditorOrder;
}

export interface CreditorOrder {
  id: number;
  discount: null;
  payment_type: string;
  invoice_number: string;
  date_scheduled: null;
  paid: string;
  balance: string;
  created_at: string;
  updated_at: string;
  company_id: number;
  notes: string;
  order_total: string;
  order_number: number;
  ready: number;
  status: string;
  user_id: number;
  due_date: string;
}

export interface Item {
  id: number;
  item_name: string;
  item_description: string;
  category_id: number;
  price: string;
  image: string;
  created_at: string;
  updated_at: string;
  qty_left: number;
  stock: number;
}

// Generated by https://quicktype.io

export interface GetAllItemsResponse {
  id: number;
  item_name: string;
  item_description: string;
  category_id: number;
  price: string;
  image: string;
  created_at: string;
  updated_at: string;
  qty_left: number;
  stock: number;
}

// Generated by https://quicktype.io

export interface FetchItemResponse {
  total_amount: string;
  data: Datum[];
  total_quantity: string;
}

export interface Datum {
  id: number;
  item_id: number;
  order_id: number;
  price: string;
  created_at: null;
  updated_at: null;
  item_name: string;
  quantity: number;
  amount: string;
  item: Item;
  order: Order;
}

export interface Item {
  id: number;
  item_name: string;
  item_description: string;
  category_id: number;
  price: string;
  image: string;
  created_at: string;
  updated_at: string;
  qty_left: number;
  stock: number;
}

export interface Order {
  id: number;
  table_id: null;
  order_total: string;
  paid: string;
  balance: string;
  created_at: string;
  updated_at: string;
  invoice_number: string;
  order_number: number;
  status: string;
  table_name: null;
  ready: number;
  order_type: string;
  user_id: number;
  take_away_cleared: number;
}

// Generated by https://quicktype.io

export interface FetchCreditorItemResponse {
  total_amount: string;
  data: Datum[];
  total_quantity: string;
}

export interface Datum {
  id: number;
  item_id: number;
  creditor_order_id: number;
  item_name: string;
  quantity: number;
  price: string;
  amount: string;
  created_at: null;
  updated_at: null;
  item: Item;
  creditor_order: CreditorOrder;
}

export interface CreditorOrder {
  id: number;
  discount: null;
  payment_type: string;
  invoice_number: string;
  date_scheduled: null;
  paid: string;
  balance: string;
  created_at: string;
  updated_at: string;
  company_id: number;
  notes: string;
  order_total: string;
  order_number: number;
  ready: number;
  status: string;
  user_id: number;
  due_date: string;
}

export interface Item {
  id: number;
  item_name: string;
  item_description: string;
  category_id: number;
  price: string;
  image: string;
  created_at: string;
  updated_at: string;
  qty_left: number;
  stock: number;
}

// Generated by https://quicktype.io

export interface GetClearedCreditorOrdersResponse {
  total: string;
  reports: Report[];
}

export interface Report {
  id: number;
  discount: null;
  payment_type: string;
  invoice_number: string;
  date_scheduled: null;
  paid: string;
  balance: string;
  created_at: string;
  updated_at: string;
  company_id: number;
  notes: string;
  order_total: string;
  order_number: number;
  ready: number;
  status: string;
  user_id: number;
  due_date: string;
  user: User;
  creditor_order_details: CreditorOrderDetail[];
  company: Company;
}

export interface Company {
  id: number;
  company_name: string;
  about: string;
  created_at: string;
  updated_at: string;
}

export interface CreditorOrderDetail {
  id: number;
  item_id: number;
  creditor_order_id: number;
  item_name: string;
  quantity: number;
  price: string;
  amount: string;
  created_at: null;
  updated_at: null;
}

export interface User {
  id: number;
  firstName: string;
  lastName: string;
  email: string;
  phone: string;
  userType: string;
  role_id: number;
  email_verified_at: null;
  created_at: null;
  updated_at: null;
}

// Generated by https://quicktype.io

export interface GetInventoryRecordsResponse {
  id: number;
  old_stock: number;
  new_stock: number;
  old_qty: number;
  new_qty_left: number;
  item_id: number;
  date: string;
  created_at: string;
  updated_at: string;
  qty_added: number;
  user_id: number;
  user: User;
  item: Item;
}

export interface Item {
  id: number;
  item_name: string;
  item_description: string;
  category_id: number;
  price: string;
  image: string;
  created_at: string;
  updated_at: string;
  qty_left: number;
  stock: number;
}

export interface User {
  id: number;
  firstName: string;
  lastName: string;
  email: string;
  phone: string;
  userType: string;
  role_id: number;
  email_verified_at: null;
  created_at: null;
  updated_at: null;
}

class ReportsModules extends AxiosClient {
  BASE_URL = "http://127.0.0.1:8000/api";

  async getClearedOrderItems() {
    const res = await this.get<ApiResponse<GetClearedOrderItemsResponse>>(
      `${this.BASE_URL}/get-cleared-order-items`
    );
    return res.data;
  }

  async getClearedOrders() {
    const res = await this.get<ApiResponse<GetClearedOrdersResponse>>(
      `${this.BASE_URL}/get-cleared-orders`
    );
    return res.data;
  }

  async getDateRangeForItemSales(payload: {
    fromDate: string;
    toDate: string;
    item_id: number | string;
  }) {
    const res = await this.get<ApiResponse<GetClearedOrderItemsResponse>>(
      `${this.BASE_URL}/get-sales-for-item/${payload.fromDate}/${payload.toDate}/${payload.item_id}`
    );
    return res.data;
  }
  async getDateRangeForCreditorItem(payload: {
    fromDate: string;
    toDate: string;
    item_id: number | string;
  }) {
    const res = await this.get<ApiResponse<GetClearedOrderItemsResponse>>(
      `${this.BASE_URL}/get-sales-for-creditor-orders/${payload.fromDate}/${payload.toDate}/${payload.item_id}`
    );
    return res.data;
  }

  async getItemsForReport() {
    const res = await this.get<ApiResponse<GetItemsForReportResponse>>(
      `${this.BASE_URL}/get-items-for-report`
    );
    return res.data;
  }

  async getItemsForCreditorReport() {
    const res = await this.get<ApiResponse<GetItemsForCreditorReportResponse>>(
      `${this.BASE_URL}/get-items-for-creditor-report`
    );
    return res.data;
  }

  async getAllItems() {
    const res = await this.get<ApiResponse<GetAllItemsResponse>>(
      `${this.BASE_URL}/get-all-items`
    );
    return res.data;
  }

  async fetchItem(id: number) {
    const res = await this.get<ApiResponse<FetchItemResponse>>(
      `${this.BASE_URL}/fetch-item/${id}`
    );
    return res.data;
  }

  async fetchCreditorItem(id: number) {
    const res = await this.get<ApiResponse<FetchCreditorItemResponse>>(
      `${this.BASE_URL}/fetch-creditor-item/${id}`
    );
    return res.data;
  }

  async getClearedCreditorOrders() {
    const res = await this.get<ApiResponse<GetClearedCreditorOrdersResponse>>(
      `${this.BASE_URL}/get-cleared-creditor-orders`
    );
    return res.data;
  }

  async getInventoryRecords() {
    const res = await this.get<ApiResponse<GetInventoryRecordsResponse>>(
      `${this.BASE_URL}/get-inventory-records`
    );
    return res.data;
  }
}

export default ReportsModules;
